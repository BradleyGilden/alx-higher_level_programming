Module: 101-lazy_matrix_mul
==================

# Import module
>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Functions:
~~~~~~~~~~

lazy_matrix_mul
----------------
    @EXPECTED SUCESS

    # Using valid m_a and m_b with ints, with m_a.rows = m_b.cols
    >>> lazy_matrix_mul([[15, 5, 3], [9, 7, 9]], [[1, 4], [13, 2], [17, 6]]) # doctest: +NORMALIZE_WHITESPACE
    array([[[131,  88],
            [253, 104]]])

        xxxxxxxxxx

    # Using valid m_a and m_b with float and ints, with m_a.rows = m_b.cols
    >>> lazy_matrix_mul([[15, 5.1, 3], [9, 7, 9.2]], [[1, 4.3], [13, 2.4], 
    ...                 [17, 6]])
    array([[[132.3 ,  94.74],
            [256.4 , 110.7 ]]])

        xxxxxxxxxx

    # Using square matrix m_a and square matrix m_b
    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
    array([[[19, 22],
            [43, 50]]])

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    @EXPECTED FAILURE

    # Using invalid m_a type
    >>> lazy_matrix_mul("1, 2, 3", [[4], [5], [6]])
    Traceback (most recent call last):
    numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U7'), dtype('int64')) -> None

        xxxxxxxxxx

    # Using invalid m_b type
    >>> lazy_matrix_mul([[1], [2], [3]], "4, 5, 6")
    Traceback (most recent call last):
    numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('int64'), dtype('<U7')) -> None

        xxxxxxxxxx

    # When m_a is not a list of lists
    >>> lazy_matrix_mul([1, 2, 3], [[4], [5], [6]])
    array([[[32]]])

        xxxxxxxxxx

    # When m_b is not a list of lists
    >>> lazy_matrix_mul([[1, 2, 3]], [4])
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 3)

        xxxxxxxxxx

    # When m_a is an empty list
    >>> lazy_matrix_mul([], [[1, 3, 5]])
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 0)

    >>> lazy_matrix_mul([[]], [[1, 3, 5]])
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 0)

        xxxxxxxxxx

    # When m_b is an empty list
    >>> lazy_matrix_mul([[2, 4, 6]], [])
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 3)

    >>> lazy_matrix_mul([[2, 4, 6]], [[]])
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 1 is different from 3)

        xxxxxxxxxx

    # Using invalid sublist element type for m_a
    >>> lazy_matrix_mul([[1, "Fried Chicken", 3]], [[4], [5], [6]])
    Traceback (most recent call last):
    numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('<U21'), dtype('int64')) -> None

        xxxxxxxxxx

    # Using invalid sublist element type for m_b
    >>> lazy_matrix_mul([[4], [5], [6]], [[1, "Fried Chicken", 3]])
    Traceback (most recent call last):
    numpy.core._exceptions._UFuncNoLoopError: ufunc 'matmul' did not contain a loop with signature matching types (dtype('int64'), dtype('<U21')) -> None

        xxxxxxxxxx

    # Using non-rectangular row sizes for m_a
    >>> lazy_matrix_mul([[4], [5, 5], [6]], [[1, 2, 3]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (1, 3) + inhomogeneous part.

        xxxxxxxxxx

    # Using non-rectangular row sizes for m_b
    >>> lazy_matrix_mul([[4], [5], [6]], [[1, 2, 3], [4, 5]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence. The requested array has an inhomogeneous shape after 2 dimensions. The detected shape was (1, 2) + inhomogeneous part.

        xxxxxxxxxx

    # When matrices cant be multiplied: m_a.rows != m_b.cols
    >>> lazy_matrix_mul([[16], [25], [36]], [[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    ValueError: matmul: Input operand 1 has a mismatch in its core dimension 0, with gufunc signature (n?,k),(k,m?)->(n?,m?) (size 2 is different from 1)
    