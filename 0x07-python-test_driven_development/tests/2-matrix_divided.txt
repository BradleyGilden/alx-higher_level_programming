Module: 2-matrix_divided
==================

# Import module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Functions:
~~~~~~~~~~

matrix_divided
---------
    @EXPECTED SUCESS

    # Using 1 row with ints and floats with div as an int
    >>> matrix_divided([[5, 7.5, 9]], 3)
    [[1.67, 2.5, 3.0]]

        xxxxxxxxxx

    # Using 2 or more rows with ints and floats with div as a float
    >>> matrix_divided([[5, 7.5, 9], [10, 11, 12]], 3.0)
    [[1.67, 2.5, 3.0], [3.33, 3.67, 4.0]]

    # Using an empty 2d list
    >>> matrix_divided([[]], 3)
    [[]]

    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    @EXPECTED FAILURE

    # Using 0 as a divisor
    >>> matrix_divided([[5, 7.5, 9], [10, 11, 12]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

        xxxxxxxxxx

    # using an empty 1D list (list has to be a lists of lists)
    >>> matrix_divided([], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    # using a 1D list with valid elements
    >>> matrix_divided([5, 7.5, 9], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    # providing a valid matrix size with some invalid elements
    >>> matrix_divided([[5, "Harry", 9], ["Spotter", 11, 12]], 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    # providing an invalid divisor TypeError
    >>> matrix_divided([[5, 7.5, 9], [10, 11, 12]], "You're a wizard Harry")
    Traceback (most recent call last):
    TypeError: div must be a number
